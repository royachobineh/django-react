{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst useLocalStorage = (keyName, defaultValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.localStorage.getItem(keyName);\n\n      if (value) {\n        return JSON.parse(value);\n      } else {\n        window.localStorage.setItem(keyName, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n\n  const setValue = newValue => {\n    try {\n      window.localStorage.setItem(keyName, JSON.stringify(newValue));\n    } catch (err) {}\n\n    setStoredValue(newValue);\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"x1HxSNzlYHSiQoofHuKiBkP92So=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/Roya/Downloads/django-react/react-app/src/utils/use-local-storage.js"],"names":["useState","useLocalStorage","keyName","defaultValue","storedValue","setStoredValue","value","window","localStorage","getItem","JSON","parse","setItem","stringify","err","setValue","newValue"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,YAAV,KAA2B;AAAA;;AACjD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,OAA5B,CAAd;;AAEA,UAAII,KAAJ,EAAW;AACT,eAAOI,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAP;AACD,OAFD,MAEO;AACLC,QAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BV,OAA5B,EAAqCQ,IAAI,CAACG,SAAL,CAAeV,YAAf,CAArC;AACA,eAAOA,YAAP;AACD;AACF,KATD,CASE,OAAOW,GAAP,EAAY;AACZ,aAAOX,YAAP;AACD;AACF,GAb6C,CAA9C;;AAeA,QAAMY,QAAQ,GAAGC,QAAQ,IAAI;AAC3B,QAAI;AACFT,MAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BV,OAA5B,EAAqCQ,IAAI,CAACG,SAAL,CAAeG,QAAf,CAArC;AACD,KAFD,CAEE,OAAOF,GAAP,EAAY,CAAE;;AAChBT,IAAAA,cAAc,CAACW,QAAD,CAAd;AACD,GALD;;AAOA,SAAO,CAACZ,WAAD,EAAcW,QAAd,CAAP;AACD,CAxBD;;GAAMd,e;;AA0BN,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nconst useLocalStorage = (keyName, defaultValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.localStorage.getItem(keyName);\n\n      if (value) {\n        return JSON.parse(value);\n      } else {\n        window.localStorage.setItem(keyName, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n\n  const setValue = newValue => {\n    try {\n      window.localStorage.setItem(keyName, JSON.stringify(newValue));\n    } catch (err) {}\n    setStoredValue(newValue);\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}