{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useStore } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedLayout = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    getState\n  } = useStore();\n  const {\n    user,\n    loadStatus\n  } = getState().app;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!loadStatus && !user) {\n      navigate('/login');\n    }\n  }, [navigate, user, loadStatus]);\n\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(ProtectedLayout, \"pfa6QFguZDKfTCnCkt4S32rDd6w=\", false, function () {\n  return [useStore, useNavigate];\n});\n\n_c = ProtectedLayout;\nexport default ProtectedLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedLayout\");","map":{"version":3,"sources":["/Users/Roya/Downloads/django-react/react-app/src/components/layout/protected-layout.jsx"],"names":["useEffect","useStore","useNavigate","ProtectedLayout","children","getState","user","loadStatus","app","navigate"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAEA,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,QAAQ,EAA7B;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBF,QAAQ,GAAGG,GAAxC;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,UAAD,IAAe,CAACD,IAApB,EAA0B;AACxBG,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,QAAD,EAAWH,IAAX,EAAiBC,UAAjB,CAJM,CAAT;;AAMA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBAAO;AAAA,cAAGF;AAAH,mBAAP;AACD,CAhBD;;GAAMD,e;UACiBF,Q,EAEJC,W;;;KAHbC,e;AAkBN,eAAeA,eAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useStore } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst ProtectedLayout = ({ children }) => {\n  const { getState } = useStore();\n  const { user, loadStatus } = getState().app;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!loadStatus && !user) {\n      navigate('/login');\n    }\n  }, [navigate, user, loadStatus]);\n\n  if (!user) {\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedLayout;\n"]},"metadata":{},"sourceType":"module"}